import matplotlib.pyplot as plt
import numpy as np
xpoints = np.array([1, 2, 6, 18])
ypoints = np.array([3, 10, 12, 20])
plt.plot(xpoints, ypoints,marker = 'o',color="red",mec = 'g', mfc = 'g',linestyle = 'dotted')
plt.show()


import numpy as np
import matplotlib.pyplot as plt
data = {'Java':22.2, 'Python':17.6, 'PHP':8.8,'JavaScript':8,'C#':7.7,'C++':6.7}
courses = list(data.keys())
values = list(data.values())
fig = plt.figure(figsize = (10, 5))
plt.bar(courses, values, color ='maroon',width = 0.4)
plt.xlabel("Programming languages")
plt.ylabel("Popularity")
plt.title("Popularity of Programming languages")
plt.show()



import matplotlib.pyplot as plt
x = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
m = [88, 92, 80, 89, 100, 80, 60, 100, 80, 34]
s = [35, 79, 79, 48, 100, 88, 32, 45, 20, 30]
plt.scatter(x, m,label="maths marks")
plt.scatter(x, s,label="science marks")
plt.legend(loc='upper right')
plt.xlabel("Marks Range")
plt.ylabel("Marks Scored")
plt.title("Scatter plot")
plt.show() 


import matplotlib.pyplot as plt
import numpy as np
y = np.array([22.2,17.6,8.8,8,7.7,6.7])
mylabels = ["Java", "Python", "PHP", "JavaScript", "C#", "C++"]
plt.pie(y, labels = mylabels)
plt.show()



import numpy as np
import matplotlib.pyplot as plt
y1 = [22,30,35,35,26]
y2 = [25,32,30,35,29]
x_labels = ['G1','G2','G3','G4','G5']
x1 = np.arange(5)
width = 0.40
plt.bar(x1-0.2,y1,color="green",width=width,label='Men')
plt.bar(x1+0.2,y2,color="red",width=width,label='Women')
plt.xticks(x1,x_labels)
plt.xlabel("Person")
plt.ylabel("Scores")
plt.legend()
plt.title("scores by group and gender")
plt.show()


import matplotlib.pyplot as plt
x1 = [10,20,30]
y1 = [10,20,30]
plt.plot(x1, y1, label = "line 1")
x2 = [30,40,50]
y2 = [30,40,50]
plt.plot(x2, y2, label = "line 2")
plt.xlabel('x axis')
plt.ylabel('y axis')
plt.title('Two Line plot')
plt.legend()
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
data=pd.read_csv("Iris.csv")
print(data.head(10))



import seaborn as sns
iris=sns.load_dataset('iris')
sns.set_style('whitegrid')
sns.FacetGrid(iris,hue='species',
             height=6).map(plt.scatter,
                          'sepal_length',
                          'petal_length').add_legend()



